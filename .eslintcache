[{"/Users/lauraningel/Desktop/final-project/src/reportWebVitals.js":"1","/Users/lauraningel/Desktop/final-project/src/index.js":"2","/Users/lauraningel/Desktop/final-project/src/App.js":"3","/Users/lauraningel/Desktop/final-project/src/components/PlantCatalog.js":"4","/Users/lauraningel/Desktop/final-project/src/components/PlantDetail.js":"5","/Users/lauraningel/Desktop/final-project/src/components/NavBar.js":"6","/Users/lauraningel/Desktop/final-project/src/components/SearchCatalog.js":"7","/Users/lauraningel/Desktop/final-project/src/components/ModalWishlist.js":"8","/Users/lauraningel/Desktop/final-project/src/components/ModalRepo.js":"9","/Users/lauraningel/Desktop/final-project/src/components/FormAddPlant.js":"10","/Users/lauraningel/Desktop/final-project/src/components/PlantRepo.js":"11","/Users/lauraningel/Desktop/final-project/src/components/UserProfile.js":"12","/Users/lauraningel/Desktop/final-project/src/components/Login.js":"13","/Users/lauraningel/Desktop/final-project/src/components/Signup.js":"14","/Users/lauraningel/Desktop/final-project/src/utils/auth.js":"15","/Users/lauraningel/Desktop/final-project/src/components/ProtectedRoute.js":"16","/Users/lauraningel/Desktop/final-project/src/components/ModalAddEvent.js":"17","/Users/lauraningel/Desktop/final-project/src/components/UserProfileCard.js":"18","/Users/lauraningel/Desktop/final-project/src/components/Users.js":"19","/Users/lauraningel/Desktop/final-project/src/components/FormUpdatePlant.js":"20","/Users/lauraningel/Desktop/final-project/src/components/ModalUpdatePlant.js":"21","/Users/lauraningel/Desktop/final-project/src/components/UserEventSection.js":"22","/Users/lauraningel/Desktop/final-project/src/components/Events/Events.js":"23","/Users/lauraningel/Desktop/final-project/src/components/Events/EventDetail.js":"24","/Users/lauraningel/Desktop/final-project/src/components/Events/FormAddEvent.js":"25","/Users/lauraningel/Desktop/final-project/src/components/Events/SearchEvents.js":"26"},{"size":362,"mtime":1606142850419,"results":"27","hashOfConfig":"28"},{"size":572,"mtime":1606306528206,"results":"29","hashOfConfig":"28"},{"size":11236,"mtime":1609953421195,"results":"30","hashOfConfig":"28"},{"size":3395,"mtime":1607246224337,"results":"31","hashOfConfig":"28"},{"size":7282,"mtime":1609948456577,"results":"32","hashOfConfig":"28"},{"size":3305,"mtime":1609952156074,"results":"33","hashOfConfig":"28"},{"size":692,"mtime":1606500161688,"results":"34","hashOfConfig":"28"},{"size":1221,"mtime":1609948069945,"results":"35","hashOfConfig":"28"},{"size":1158,"mtime":1607077064399,"results":"36","hashOfConfig":"28"},{"size":5580,"mtime":1609583413978,"results":"37","hashOfConfig":"28"},{"size":4580,"mtime":1609947910908,"results":"38","hashOfConfig":"28"},{"size":11228,"mtime":1609954665959,"results":"39","hashOfConfig":"28"},{"size":4218,"mtime":1609951847712,"results":"40","hashOfConfig":"28"},{"size":3433,"mtime":1609951815326,"results":"41","hashOfConfig":"28"},{"size":2301,"mtime":1609413147310,"results":"42","hashOfConfig":"28"},{"size":1153,"mtime":1609247400605,"results":"43","hashOfConfig":"28"},{"size":1209,"mtime":1609667523717,"results":"44","hashOfConfig":"28"},{"size":3074,"mtime":1607531000146,"results":"45","hashOfConfig":"28"},{"size":3140,"mtime":1609954127435,"results":"46","hashOfConfig":"28"},{"size":6849,"mtime":1609586592907,"results":"47","hashOfConfig":"28"},{"size":1330,"mtime":1609584656395,"results":"48","hashOfConfig":"28"},{"size":4050,"mtime":1609946740853,"results":"49","hashOfConfig":"28"},{"size":6931,"mtime":1609951254112,"results":"50","hashOfConfig":"28"},{"size":6925,"mtime":1609951517573,"results":"51","hashOfConfig":"28"},{"size":4853,"mtime":1609943215714,"results":"52","hashOfConfig":"28"},{"size":707,"mtime":1609667459325,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"tv9s6g",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lauraningel/Desktop/final-project/src/reportWebVitals.js",[],["116","117"],"/Users/lauraningel/Desktop/final-project/src/index.js",[],["118","119"],"/Users/lauraningel/Desktop/final-project/src/App.js",[],"/Users/lauraningel/Desktop/final-project/src/components/PlantCatalog.js",["120"],"import React, { useState } from \"react\";\nimport NavBar from \"./NavBar\";\nimport bkg from \"../assets/detailPage.png\";\nimport {\n  CardContent,\n  Grid,\n  Card,\n  CardMedia,\n  CircularProgress,\n  Typography,\n  Box,\n} from \"@material-ui/core\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SearchCatalog from \"./SearchCatalog\";\n\nconst useStyles = makeStyles({\n  catalogContainer: {\n    paddingTop: \"20px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n  cardMedia: {\n    margin: \"auto\",\n  },\n  cardContent: {\n    textAlign: \"center\",\n  },\n});\n\nexport default function PlantCatalog({\n  allPlants,\n  history,\n  setCurrUser,\n  setCredentials,\n  handleLogout,\n}) {\n  const classes = useStyles();\n\n  // PAGINATION STATE\n  const [page, setPage] = useState(1);\n  // SEARCH STATE (only enable pagination if !isSearch, otherwise hide)\n  const [plantSearch, setPlantSearch] = useState(\"\");\n  const [isSearch, setIsSearch] = useState(false);\n\n  // HANDLE PAGINATION\n  const handleChangePage = (_, page) => {\n    setPage(page);\n  };\n\n  const idxLastPlant = page * 15;\n  const idxFirstPlant = idxLastPlant - 15;\n\n  // CREATE EACH PLANT PREVIEW CARD\n  const createPlantCard = (el) => {\n    return (\n      <Grid item xs={12} sm={4} key={el._id}>\n        <Card onClick={() => history.push(`/${el._id}`)} square={true}>\n          <Box display=\"flex\">\n            <CardMedia\n              className={classes.cardMedia}\n              image={el.srcImg}\n              style={{ width: \"130px\", height: \"130px\" }}\n            ></CardMedia>\n            <CardMedia\n              className={classes.cardMedia}\n              image={el.srcImg}\n              style={{ width: \"130px\", height: \"130px\" }}\n            ></CardMedia>\n            <CardMedia\n              className={classes.cardMedia}\n              image={el.srcImg}\n              style={{ width: \"130px\", height: \"130px\" }}\n            ></CardMedia>\n          </Box>\n          <CardContent className={classes.cardContent}>\n            <Typography style={{ fontWeight: 700 }}>\n              {el.latin || \"-\"}\n            </Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n    );\n  };\n\n  return (\n    <>\n      <NavBar\n        setCurrUser={setCurrUser}\n        setCredentials={setCredentials}\n        handleLogout={handleLogout}\n      />\n      {allPlants ? (\n        <Grid container spacing={2} className={classes.catalogContainer}>\n          <SearchCatalog\n            setPlantSearch={setPlantSearch}\n            setIsSearch={setIsSearch}\n          />\n          {isSearch\n            ? allPlants\n                .sort((a, b) => a.latin - b.latin)\n                .map(\n                  (el) => el.latin.includes(plantSearch) && createPlantCard(el)\n                )\n            : allPlants\n                .sort((a, b) => a.latin - b.latin)\n                .slice(idxFirstPlant, idxLastPlant)\n                .map((el) => createPlantCard(el))}\n\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n            {!isSearch && (\n              <Pagination\n                shape=\"rounded\"\n                count={Math.ceil(allPlants.length / 15)}\n                page={page}\n                onChange={handleChangePage}\n              />\n            )}\n          </Grid>\n        </Grid>\n      ) : (\n        <CircularProgress />\n      )}\n    </>\n  );\n}\n",["121","122"],"/Users/lauraningel/Desktop/final-project/src/components/PlantDetail.js",[],"/Users/lauraningel/Desktop/final-project/src/components/NavBar.js",["123"],"/Users/lauraningel/Desktop/final-project/src/components/SearchCatalog.js",[],["124","125"],"/Users/lauraningel/Desktop/final-project/src/components/ModalWishlist.js",[],"/Users/lauraningel/Desktop/final-project/src/components/ModalRepo.js",[],["126","127"],"/Users/lauraningel/Desktop/final-project/src/components/FormAddPlant.js",[],"/Users/lauraningel/Desktop/final-project/src/components/PlantRepo.js",[],"/Users/lauraningel/Desktop/final-project/src/components/UserProfile.js",["128"],"/Users/lauraningel/Desktop/final-project/src/components/Login.js",[],"/Users/lauraningel/Desktop/final-project/src/components/Signup.js",["129","130"],"/Users/lauraningel/Desktop/final-project/src/utils/auth.js",[],["131","132"],"/Users/lauraningel/Desktop/final-project/src/components/ProtectedRoute.js",[],"/Users/lauraningel/Desktop/final-project/src/components/ModalAddEvent.js",[],"/Users/lauraningel/Desktop/final-project/src/components/UserProfileCard.js",[],["133","134"],"/Users/lauraningel/Desktop/final-project/src/components/Users.js",["135","136","137","138","139"],"/Users/lauraningel/Desktop/final-project/src/components/FormUpdatePlant.js",["140","141"],"import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Grid, TextField, Typography, Button } from \"@material-ui/core\";\nimport { ToggleButton, ToggleButtonGroup } from \"@material-ui/lab\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SentimentVeryDissatisfiedIcon from \"@material-ui/icons/SentimentVeryDissatisfied\";\nimport SentimentSatisfiedIcon from \"@material-ui/icons/SentimentSatisfied\";\nimport SentimentSatisfiedOutlinedIcon from \"@material-ui/icons/SentimentSatisfiedOutlined\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  formInputs: {\n    width: \"100%\",\n  },\n});\n\nexport default function FormUpdatePlant({\n  selectedPlant,\n  setSelectedPlant,\n  setMyRepo,\n  myRepo,\n  setNeedsCare,\n  setOpenEdit,\n}) {\n  const classes = useStyles();\n\n  // STATE FORM UPDATE INPUT\n  const [plantUpdateInput, setPlantUpdateInput] = useState({\n    nickname: \"\",\n    waterDate: \"\",\n    waterInterval: \"\",\n    fertilizeDate: \"\",\n    fertilizeInterval: \"\",\n    repotDate: \"\",\n    repotInterval: \"\",\n    happiness: \"\",\n  });\n\n  // HANDLE FORM INPUT\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    // changing the state here prevents the \"controlled input\" warning\n    setSelectedPlant((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n\n    // do you need both then? or can you just send updatet selected plant obj?\n    setPlantUpdateInput((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  console.log(\"SELECTED PLANT\", selectedPlant);\n  console.log(\n    moment(selectedPlant.water.date, \"MM/DD/YYYY\").format(\"YYYY/MM/DD\")\n  );\n\n  // HANDLE PLANT UPDATE\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    axios\n      .put(`http://localhost:3000/api/plants/update`, {\n        //plantUpdateInput: plantUpdateInput,\n        selectedPlant: selectedPlant,\n        // id: selectedPlant._id,\n      })\n      .then((res) => {\n        console.log(res.data);\n        setMyRepo((prevRepo) =>\n          [...prevRepo].filter((el) => el._id !== selectedPlant._id)\n        );\n        setMyRepo((prevRepo) => [...prevRepo, res.data]);\n        setNeedsCare((prev) =>\n          [...prev].filter((el) => el !== selectedPlant.plant.latin)\n        );\n        setOpenEdit(false);\n      })\n      .catch((err) => console.log(err));\n    console.log(\"MY REPO FROM FORM UPDATE PLANT\", myRepo);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid item xs={12}>\n          <TextField\n            className={classes.formInputs}\n            name=\"nickname\"\n            label=\"Nickname (optional)\"\n            variant=\"outlined\"\n            type=\"text\"\n            margin=\"dense\"\n            value={selectedPlant.nickname}\n            onChange={handleChange}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            className={classes.formInputs}\n            name=\"waterDate\"\n            label=\"Next watering?\"\n            variant=\"outlined\"\n            type=\"date\"\n            margin=\"dense\"\n            value={moment(selectedPlant.water.date, \"MM/DD/YYYY\").format(\n              \"YYYY-MM-DD\"\n            )}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={handleChange}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            className={classes.formInputs}\n            name=\"waterInterval\"\n            variant=\"outlined\"\n            label=\"Preferred interval\"\n            type=\"number\"\n            margin=\"dense\"\n            value={selectedPlant.waterInterval}\n            onChange={handleChange}\n            InputProps={{\n              inputProps: {\n                min: 0,\n              },\n            }}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            className={classes.formInputs}\n            name=\"fertilizeDate\"\n            label=\"Next fertilizing?\"\n            variant=\"outlined\"\n            type=\"date\"\n            margin=\"dense\"\n            value={moment(selectedPlant.fertilize.date, \"MM/DD/YYYY\").format(\n              \"YYYY-MM-DD\"\n            )}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={handleChange}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            className={classes.formInputs}\n            name=\"fertilizeInterval\"\n            variant=\"outlined\"\n            label=\"Preferred interval\"\n            type=\"number\"\n            margin=\"dense\"\n            value={selectedPlant.fertilizeInterval}\n            onChange={handleChange}\n            InputProps={{\n              inputProps: {\n                min: 0,\n              },\n            }}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            className={classes.formInputs}\n            name=\"repotDate\"\n            label=\"Next repotting?\"\n            variant=\"outlined\"\n            type=\"date\"\n            margin=\"dense\"\n            value={moment(selectedPlant.repot.date, \"MM/DD/YYYY\").format(\n              \"YYYY-MM-DD\"\n            )}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={handleChange}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            className={classes.formInputs}\n            name=\"repotInterval\"\n            variant=\"outlined\"\n            label=\"Preferred interval\"\n            type=\"number\"\n            margin=\"dense\"\n            value={selectedPlant.repotInterval}\n            onChange={handleChange}\n            InputProps={{\n              inputProps: {\n                min: 0,\n              },\n            }}\n          />\n        </Grid>\n        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n          <Typography style={{ marginTop: \"1em\" }}>\n            current plant happiness:\n          </Typography>\n          <ToggleButtonGroup\n            value={plantUpdateInput.happiness}\n            exclusive\n            onChange={handleChange}\n          >\n            <ToggleButton value=\"good\" name=\"happiness\">\n              <SentimentSatisfiedOutlinedIcon />\n            </ToggleButton>\n            <ToggleButton value=\"medium\" name=\"happiness\">\n              <SentimentSatisfiedIcon />\n            </ToggleButton>\n            <ToggleButton value=\"bad\" name=\"happiness\">\n              <SentimentVeryDissatisfiedIcon />\n            </ToggleButton>\n          </ToggleButtonGroup>\n        </Grid>\n        <Button\n          variant=\"outlined\"\n          type=\"submit\"\n          className={classes.formInputs}\n          style={{ marginTop: \"2em\" }}\n        >\n          Submit\n        </Button>\n      </Grid>\n    </form>\n  );\n}\n","/Users/lauraningel/Desktop/final-project/src/components/ModalUpdatePlant.js",[],["142","143"],"/Users/lauraningel/Desktop/final-project/src/components/UserEventSection.js",[],"/Users/lauraningel/Desktop/final-project/src/components/Events/Events.js",[],"/Users/lauraningel/Desktop/final-project/src/components/Events/EventDetail.js",[],"/Users/lauraningel/Desktop/final-project/src/components/Events/FormAddEvent.js",["144","145","146","147","148","149","150"],"/Users/lauraningel/Desktop/final-project/src/components/Events/SearchEvents.js",[],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"151","replacedBy":"155"},{"ruleId":"153","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":3,"column":8,"nodeType":"159","messageId":"160","endLine":3,"endColumn":11},{"ruleId":"151","replacedBy":"161"},{"ruleId":"153","replacedBy":"162"},{"ruleId":"157","severity":1,"message":"163","line":17,"column":10,"nodeType":"159","messageId":"160","endLine":17,"endColumn":16},{"ruleId":"151","replacedBy":"164"},{"ruleId":"153","replacedBy":"165"},{"ruleId":"151","replacedBy":"166"},{"ruleId":"153","replacedBy":"167"},{"ruleId":"157","severity":1,"message":"168","line":101,"column":10,"nodeType":"159","messageId":"160","endLine":101,"endColumn":19},{"ruleId":"157","severity":1,"message":"169","line":4,"column":3,"nodeType":"159","messageId":"160","endLine":4,"endColumn":9},{"ruleId":"157","severity":1,"message":"170","line":14,"column":8,"nodeType":"159","messageId":"160","endLine":14,"endColumn":24},{"ruleId":"151","replacedBy":"171"},{"ruleId":"153","replacedBy":"172"},{"ruleId":"151","replacedBy":"173"},{"ruleId":"153","replacedBy":"174"},{"ruleId":"157","severity":1,"message":"175","line":1,"column":17,"nodeType":"159","messageId":"160","endLine":1,"endColumn":25},{"ruleId":"157","severity":1,"message":"176","line":4,"column":8,"nodeType":"159","messageId":"160","endLine":4,"endColumn":13},{"ruleId":"157","severity":1,"message":"177","line":7,"column":3,"nodeType":"159","messageId":"160","endLine":7,"endColumn":6},{"ruleId":"157","severity":1,"message":"178","line":13,"column":3,"nodeType":"159","messageId":"160","endLine":13,"endColumn":9},{"ruleId":"157","severity":1,"message":"179","line":62,"column":11,"nodeType":"159","messageId":"160","endLine":62,"endColumn":13},{"ruleId":"157","severity":1,"message":"180","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":19},{"ruleId":"157","severity":1,"message":"181","line":11,"column":10,"nodeType":"159","messageId":"160","endLine":11,"endColumn":20},{"ruleId":"151","replacedBy":"182"},{"ruleId":"153","replacedBy":"183"},{"ruleId":"157","severity":1,"message":"184","line":1,"column":27,"nodeType":"159","messageId":"160","endLine":1,"endColumn":36},{"ruleId":"157","severity":1,"message":"180","line":2,"column":10,"nodeType":"159","messageId":"160","endLine":2,"endColumn":19},{"ruleId":"157","severity":1,"message":"185","line":3,"column":27,"nodeType":"159","messageId":"160","endLine":3,"endColumn":37},{"ruleId":"157","severity":1,"message":"186","line":4,"column":10,"nodeType":"159","messageId":"160","endLine":4,"endColumn":22},{"ruleId":"157","severity":1,"message":"187","line":4,"column":24,"nodeType":"159","messageId":"160","endLine":4,"endColumn":41},{"ruleId":"157","severity":1,"message":"188","line":22,"column":9,"nodeType":"159","messageId":"160","endLine":22,"endColumn":16},{"ruleId":"189","severity":1,"message":"190","line":116,"column":11,"nodeType":"191","endLine":116,"endColumn":29},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],["192"],["193"],"no-unused-vars","'bkg' is defined but never used.","Identifier","unusedVar",["192"],["193"],"'logout' is defined but never used.",["192"],["193"],["192"],["193"],"'pathToImg' is assigned a value but never used.","'Avatar' is defined but never used.","'LockOutlinedIcon' is defined but never used.",["192"],["193"],["192"],["193"],"'useState' is defined but never used.","'axios' is defined but never used.","'Box' is defined but never used.","'Button' is defined but never used.","'id' is assigned a value but never used.","'useParams' is defined but never used.","'useHistory' is defined but never used.",["192"],["193"],"'useEffect' is defined but never used.","'Typography' is defined but never used.","'ToggleButton' is defined but never used.","'ToggleButtonGroup' is defined but never used.","'history' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]