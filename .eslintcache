[{"/Users/lauraningel/Desktop/final-project/src/reportWebVitals.js":"1","/Users/lauraningel/Desktop/final-project/src/index.js":"2","/Users/lauraningel/Desktop/final-project/src/App.js":"3","/Users/lauraningel/Desktop/final-project/src/components/NavBar.js":"4","/Users/lauraningel/Desktop/final-project/src/components/Login.js":"5","/Users/lauraningel/Desktop/final-project/src/components/Signup.js":"6","/Users/lauraningel/Desktop/final-project/src/utils/auth.js":"7","/Users/lauraningel/Desktop/final-project/src/components/ProtectedRoute.js":"8","/Users/lauraningel/Desktop/final-project/src/components/Events/Events.js":"9","/Users/lauraningel/Desktop/final-project/src/components/Events/EventDetail.js":"10","/Users/lauraningel/Desktop/final-project/src/components/Events/FormAddEvent.js":"11","/Users/lauraningel/Desktop/final-project/src/components/Events/SearchEvents.js":"12","/Users/lauraningel/Desktop/final-project/src/components/NotFound.js":"13","/Users/lauraningel/Desktop/final-project/src/components/Events/ModalUpdateEvent.js":"14","/Users/lauraningel/Desktop/final-project/src/components/Events/FormUpdateEvent.js":"15","/Users/lauraningel/Desktop/final-project/src/components/User/Users.js":"16","/Users/lauraningel/Desktop/final-project/src/components/User/UserProfile.js":"17","/Users/lauraningel/Desktop/final-project/src/components/User/UserEventSection.js":"18","/Users/lauraningel/Desktop/final-project/src/components/Plants/PlantDetail.js":"19","/Users/lauraningel/Desktop/final-project/src/components/Plants/FormUpdatePlant.js":"20","/Users/lauraningel/Desktop/final-project/src/components/Events/ModalAddEvent.js":"21","/Users/lauraningel/Desktop/final-project/src/components/Plants/PlantRepo.js":"22","/Users/lauraningel/Desktop/final-project/src/components/Plants/PlantCatalog.js":"23","/Users/lauraningel/Desktop/final-project/src/components/Plants/ModalUpdatePlant.js":"24","/Users/lauraningel/Desktop/final-project/src/components/User/VisitedProfile.js":"25","/Users/lauraningel/Desktop/final-project/src/components/User/Messenger.js":"26","/Users/lauraningel/Desktop/final-project/src/components/Plants/FormAddPlant.js":"27","/Users/lauraningel/Desktop/final-project/src/components/Plants/ModalWishlist.js":"28","/Users/lauraningel/Desktop/final-project/src/components/Plants/SearchCatalog.js":"29","/Users/lauraningel/Desktop/final-project/src/contexts/ConversationsProvider.js":"30","/Users/lauraningel/Desktop/final-project/src/components/Plants/ModalRepo.js":"31","/Users/lauraningel/Desktop/final-project/src/contexts/SocketProvider.js":"32"},{"size":362,"mtime":1606142850419,"results":"33","hashOfConfig":"34"},{"size":572,"mtime":1606306528206,"results":"35","hashOfConfig":"34"},{"size":12795,"mtime":1613579368967,"results":"36","hashOfConfig":"34"},{"size":3295,"mtime":1610723269845,"results":"37","hashOfConfig":"34"},{"size":4218,"mtime":1609951847712,"results":"38","hashOfConfig":"34"},{"size":3433,"mtime":1609951815326,"results":"39","hashOfConfig":"34"},{"size":2301,"mtime":1609413147310,"results":"40","hashOfConfig":"34"},{"size":1462,"mtime":1610721620051,"results":"41","hashOfConfig":"34"},{"size":7740,"mtime":1610110240026,"results":"42","hashOfConfig":"34"},{"size":6873,"mtime":1610032085564,"results":"43","hashOfConfig":"34"},{"size":5033,"mtime":1610106838340,"results":"44","hashOfConfig":"34"},{"size":707,"mtime":1609667459325,"results":"45","hashOfConfig":"34"},{"size":1200,"mtime":1610039771023,"results":"46","hashOfConfig":"34"},{"size":1326,"mtime":1610109320216,"results":"47","hashOfConfig":"34"},{"size":5939,"mtime":1610109313546,"results":"48","hashOfConfig":"34"},{"size":3098,"mtime":1610112253624,"results":"49","hashOfConfig":"34"},{"size":11511,"mtime":1612721020970,"results":"50","hashOfConfig":"34"},{"size":4189,"mtime":1610109856190,"results":"51","hashOfConfig":"34"},{"size":7286,"mtime":1610110668459,"results":"52","hashOfConfig":"34"},{"size":6615,"mtime":1610110291598,"results":"53","hashOfConfig":"34"},{"size":1202,"mtime":1610110500160,"results":"54","hashOfConfig":"34"},{"size":4584,"mtime":1610110661902,"results":"55","hashOfConfig":"34"},{"size":3476,"mtime":1610112097163,"results":"56","hashOfConfig":"34"},{"size":1330,"mtime":1610110753849,"results":"57","hashOfConfig":"34"},{"size":7235,"mtime":1613583890479,"results":"58","hashOfConfig":"34"},{"size":5461,"mtime":1613489623791,"results":"59","hashOfConfig":"34"},{"size":5580,"mtime":1610110091322,"results":"60","hashOfConfig":"34"},{"size":1221,"mtime":1610110099385,"results":"61","hashOfConfig":"34"},{"size":692,"mtime":1610110068476,"results":"62","hashOfConfig":"34"},{"size":2167,"mtime":1613163676623,"results":"63","hashOfConfig":"34"},{"size":1158,"mtime":1610110139644,"results":"64","hashOfConfig":"34"},{"size":737,"mtime":1612628205421,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"tv9s6g",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"77"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"71"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"106"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},"/Users/lauraningel/Desktop/final-project/src/reportWebVitals.js",[],["154","155"],"/Users/lauraningel/Desktop/final-project/src/index.js",[],["156","157"],"/Users/lauraningel/Desktop/final-project/src/App.js",["158","159"],"/Users/lauraningel/Desktop/final-project/src/components/NavBar.js",["160"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { AppBar, Toolbar, Container } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport logo from \"../assets/logo.png\";\nimport {\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  Menu,\n  MenuItem,\n  Button,\n  Hidden,\n} from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { logout } from \"../utils/auth\";\n\nconst useStyles = makeStyles({\n  navBar: {\n    backgroundColor: \"white\",\n    border: \"1px solid black\",\n  },\n  navContainer: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  navLinkContainer: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n});\n\nconst navLinks = [\n  { title: `events`, path: `/events` },\n  { title: `users`, path: `/users` },\n  { title: `plantindex`, path: `/catalog` },\n];\n\nexport default function NavBar({ setCurrUser, setCredentials, handleLogout }) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const classes = useStyles();\n  return (\n    <>\n      <AppBar position=\"static\" className={classes.navBar}>\n        <Toolbar>\n          <Container className={classes.navContainer}>\n            <Typography>\n              <Link to=\"/\">\n                <img src={logo} alt=\"logo\" />\n              </Link>\n            </Typography>\n            <Hidden xsDown>\n              <List\n                component=\"nav\"\n                aria-labelledby=\"main navigation\"\n                className={classes.navLinkContainer}\n              >\n                {navLinks.map(({ title, path }) => (\n                  <Link to={path} key={title}>\n                    <ListItem button>\n                      <ListItemText primary={title} />\n                    </ListItem>\n                  </Link>\n                ))}\n                <Link to=\"/login\">\n                  <ListItem onClick={() => handleLogout()}>\n                    <ListItemText primary=\"bye\" />\n                  </ListItem>\n                </Link>\n              </List>\n            </Hidden>\n            <Hidden smUp>\n              <Button\n                aria-controls=\"simple-menu\"\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n              >\n                <AddIcon />\n              </Button>\n              <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>\n                  <Link to=\"/events\">events</Link>\n                </MenuItem>\n                <MenuItem onClick={handleClose}>\n                  <Link to=\"/users\">users</Link>\n                </MenuItem>\n                <MenuItem onClick={handleClose}>\n                  <Link to=\"/catalog\">plant index</Link>\n                </MenuItem>\n                <MenuItem onClick={() => handleLogout()}>\n                  <Link to=\"/login\">bye</Link>\n                </MenuItem>\n              </Menu>\n            </Hidden>\n          </Container>\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n}\n",["161","162"],"/Users/lauraningel/Desktop/final-project/src/components/Login.js",[],["163","164"],"/Users/lauraningel/Desktop/final-project/src/components/Signup.js",["165","166"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  FormControlLabel,\n  Checkbox,\n  Typography,\n  Paper,\n  Grid,\n} from \"@material-ui/core/\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport bkg from \"../assets/detailPage.png\";\nimport logo from \"../assets/logo.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: \"60px\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  image: {\n    height: \"100vh\",\n    backgroundImage: `url(${bkg})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nexport default function SignIn({ handleSetNewUser, handleRegister }) {\n  const classes = useStyles();\n\n  return (\n    <Grid className={classes.image}>\n      <Container component=\"main\" maxWidth=\"sm\">\n        <CssBaseline />\n        <Paper className={classes.paper}>\n          <img src={logo} alt=\"logo\" />\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"username\"\n              name=\"username\"\n              autoComplete=\"username\"\n              autoFocus\n              onChange={(e) => handleSetNewUser(e)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={(e) => handleSetNewUser(e)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"city\"\n              label=\"city\"\n              type=\"city\"\n              id=\"city\"\n              onChange={(e) => handleSetNewUser(e)}\n            />\n            <FormControlLabel\n              control={\n                <Checkbox name=\"plantsitting\" value=\"yes\" color=\"primary\" />\n              }\n              label=\"Are you up for plant sitting?\"\n              onChange={(e) => handleSetNewUser(e)}\n            />\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={(e) => handleRegister(e)}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item>\n                <Typography>\n                  <Link to=\"/login\">Already a member?</Link>\n                </Typography>\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n      </Container>\n    </Grid>\n  );\n}\n","/Users/lauraningel/Desktop/final-project/src/utils/auth.js",[],["167","168"],"/Users/lauraningel/Desktop/final-project/src/components/ProtectedRoute.js",[],["169","170"],"/Users/lauraningel/Desktop/final-project/src/components/Events/Events.js",[],["171","172"],"/Users/lauraningel/Desktop/final-project/src/components/Events/EventDetail.js",[],"/Users/lauraningel/Desktop/final-project/src/components/Events/FormAddEvent.js",["173","174","175","176","177","178","179"],"import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Grid, TextField, Typography, Button } from \"@material-ui/core\";\nimport { ToggleButton, ToggleButtonGroup } from \"@material-ui/lab\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  formInputs: {\n    width: \"100%\",\n  },\n});\n\nexport default function FormAddEvent({\n  setMyEvents,\n  myEvents,\n  handleClose,\n  setAllEvents,\n}) {\n  // console.log({setMyRepo})\n  const history = useHistory();\n  const classes = useStyles();\n\n  // STATE FORM INPUT\n  const [eventInput, setEventInput] = useState({\n    title: \"\",\n    date: \"\",\n    time: \"15:30\",\n    description: \"\",\n    street: \"\",\n    number: \"\",\n    zip: \"\",\n    city: \"\",\n    img: Math.floor(Math.random() * 6) + 1,\n  });\n\n  // HANDLE FORM INPUT\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setEventInput((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  // ADD NEW EVENT TO DB\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    axios\n      .post(`http://localhost:3000/api/events`, eventInput)\n      .then((res) => {\n        setAllEvents((prevEvents) => [...prevEvents, res.data]); // add to all events client\n        setMyEvents((prevEvents) => [...prevEvents, res.data]); // add to currUser events client\n      })\n      .catch((err) => console.log(err));\n    handleClose(false);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid item xs={12}>\n          <TextField\n            className={classes.formInputs}\n            name=\"title\"\n            label=\"Title\"\n            variant=\"outlined\"\n            type=\"text\"\n            margin=\"dense\"\n            onChange={handleChange}\n            required={true}\n            inputProps={{ maxLength: 24 }}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            className={classes.formInputs}\n            id=\"outlined-multiline-static\"\n            name=\"description\"\n            label=\"Description\"\n            multiline\n            rows={4}\n            margin=\"dense\"\n            variant=\"outlined\"\n            onChange={handleChange}\n            required={true}\n            inputProps={{ maxLength: 400 }}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            className={classes.formInputs}\n            name=\"date\"\n            label=\"Date\"\n            variant=\"outlined\"\n            type=\"date\"\n            margin=\"dense\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={handleChange}\n            InputProps={{\n              inputProps: { min: new Date().toISOString().slice(0, 10) },\n            }}\n            required={true}\n          />\n        </Grid>\n        <TextField\n          className={classes.formInputs}\n          name=\"time\"\n          label=\"Time\"\n          variant=\"outlined\"\n          type=\"time\"\n          margin=\"dense\"\n          defaultValue=\"15:30\"\n          variant=\"outlined\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          inputProps={{\n            step: 300, // 5 min\n          }}\n          onChange={handleChange}\n          required={true}\n        />\n        <Grid item xs={6}>\n          <TextField\n            className={classes.formInputs}\n            name=\"street\"\n            label=\"Street\"\n            variant=\"outlined\"\n            type=\"text\"\n            margin=\"dense\"\n            onChange={handleChange}\n            required={true}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            className={classes.formInputs}\n            name=\"number\"\n            label=\"Number\"\n            variant=\"outlined\"\n            type=\"text\"\n            margin=\"dense\"\n            inputProps={{\n              pattern: \"^[0-9]*$\",\n            }}\n            onChange={handleChange}\n            required={true}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            className={classes.formInputs}\n            name=\"zip\"\n            label=\"Zip code\"\n            variant=\"outlined\"\n            type=\"text\"\n            margin=\"dense\"\n            inputProps={{\n              pattern: \"^[0-9]*$\",\n            }}\n            onChange={handleChange}\n            required={true}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            className={classes.formInputs}\n            name=\"city\"\n            label=\"City\"\n            variant=\"outlined\"\n            type=\"text\"\n            margin=\"dense\"\n            onChange={handleChange}\n            required={true}\n          />\n        </Grid>\n        <Button\n          variant=\"outlined\"\n          type=\"submit\"\n          className={classes.formInputs}\n          style={{ marginTop: \"2em\" }}\n        >\n          Submit\n        </Button>\n      </Grid>\n    </form>\n  );\n}\n","/Users/lauraningel/Desktop/final-project/src/components/Events/SearchEvents.js",[],"/Users/lauraningel/Desktop/final-project/src/components/NotFound.js",["180"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Grid, Paper, Typography, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport bkg from \"../assets/repo.jpg\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  paper: {\n    padding: theme.spacing(8),\n    width: \"60%\",\n    opacity: \"80%\",\n    textAlign: \"center\",\n  },\n  root: {\n    height: \"100vh\",\n    backgroundImage: `url(${bkg})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    display: \"flex\",\n    alignContent: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nexport default function NotFound() {\n  const classes = useStyles();\n  return (\n    <Grid container className={classes.root}>\n      <Paper className={classes.paper}>\n        <Typography variant=\"h1\" component=\"h1\" gutterBottom>\n          4✿4\n        </Typography>\n        <Typography variant=\"h6\" component=\"h1\" gutterBottom>\n          can't see the forest for the trees?\n        </Typography>\n        <Link to=\"/catalog\">\n          <Button>get back to our catalog</Button>\n        </Link>\n      </Paper>\n    </Grid>\n  );\n}\n",["181","182"],"/Users/lauraningel/Desktop/final-project/src/components/Events/ModalUpdateEvent.js",[],["183","184"],"/Users/lauraningel/Desktop/final-project/src/components/Events/FormUpdateEvent.js",["185","186","187","188","189","190","191","192"],"import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Grid, TextField, Typography, Button } from \"@material-ui/core\";\nimport { ToggleButton, ToggleButtonGroup } from \"@material-ui/lab\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  formInputs: {\n    width: \"100%\",\n  },\n});\n\nexport default function FormUpdateEvent({\n  setMyEvents,\n  myEvents,\n  selectedEvent,\n  setSelectedEvent,\n  setOpenEditEvent,\n  handleClose,\n  setAllEvents,\n}) {\n  const classes = useStyles();\n\n  // STATE FORM UPDATE INPUT\n  const [eventEditInput, setEventEditInput] = useState({\n    title: \"\",\n    date: \"\",\n    time: \"15:30\",\n    description: \"\",\n    street: \"\",\n    number: \"\",\n    zip: \"\",\n    city: \"\",\n    img: Math.floor(Math.random() * 6) + 1,\n  });\n\n  // HANDLE FORM INPUT\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    // changing the state here prevents the \"controlled input\" warning\n    setSelectedEvent((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n\n    // do you need both then? or can you just send updatet selected plant obj?\n    setEventEditInput((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  // ADD UPDATES EVENT TO DB\n  // to fix: this does not go and update all user's events on client side!\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(selectedEvent);\n    axios\n      .put(`http://localhost:3000/api/events/edit`, {\n        selectedEvent: selectedEvent,\n      })\n      .then((res) => {\n        // filter old event info from all events AND curr user's event arr\n        setAllEvents((prevEvents) =>\n          [...prevEvents].filter((el) => el._id !== selectedEvent._id)\n        );\n        setMyEvents((prevEvents) =>\n          [...prevEvents].filter((el) => el._id !== selectedEvent._id)\n        );\n        // put new updated event back in all events && into curr user's event arr\n        setAllEvents((prevEvents) => [...prevEvents, res.data]);\n        setMyEvents((prevEvents) => [...prevEvents, res.data]);\n        // close modal\n        setOpenEditEvent(false);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid item xs={12}>\n          <TextField\n            className={classes.formInputs}\n            name=\"title\"\n            label=\"Title\"\n            variant=\"outlined\"\n            type=\"text\"\n            margin=\"dense\"\n            value={selectedEvent.title}\n            onChange={handleChange}\n            required={true}\n            inputProps={{ maxLength: 24 }}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            className={classes.formInputs}\n            id=\"outlined-multiline-static\"\n            name=\"description\"\n            label=\"Description\"\n            multiline\n            rows={4}\n            margin=\"dense\"\n            variant=\"outlined\"\n            onChange={handleChange}\n            value={selectedEvent.description}\n            required={true}\n            inputProps={{ maxLength: 400 }}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            className={classes.formInputs}\n            name=\"date\"\n            label=\"Date\"\n            variant=\"outlined\"\n            type=\"date\"\n            margin=\"dense\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            value={selectedEvent.date}\n            onChange={handleChange}\n            InputProps={{\n              inputProps: { min: new Date().toISOString().slice(0, 10) },\n            }}\n          />\n        </Grid>\n        <TextField\n          className={classes.formInputs}\n          name=\"time\"\n          label=\"Time\"\n          variant=\"outlined\"\n          type=\"time\"\n          margin=\"dense\"\n          variant=\"outlined\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={selectedEvent.time}\n          inputProps={{\n            step: 300, // 5 min\n          }}\n          onChange={handleChange}\n          required={true}\n        />\n        <Grid item xs={6}>\n          <TextField\n            className={classes.formInputs}\n            name=\"street\"\n            label=\"Street\"\n            variant=\"outlined\"\n            type=\"text\"\n            margin=\"dense\"\n            value={selectedEvent.address.street}\n            onChange={handleChange}\n            required={true}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            className={classes.formInputs}\n            name=\"number\"\n            label=\"Number\"\n            variant=\"outlined\"\n            type=\"text\"\n            margin=\"dense\"\n            value={selectedEvent.address.number}\n            onChange={handleChange}\n            required={true}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            className={classes.formInputs}\n            name=\"zip\"\n            label=\"Zip code\"\n            variant=\"outlined\"\n            type=\"text\"\n            margin=\"dense\"\n            value={selectedEvent.address.zip}\n            onChange={handleChange}\n            required={true}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            className={classes.formInputs}\n            name=\"city\"\n            label=\"City\"\n            variant=\"outlined\"\n            type=\"text\"\n            margin=\"dense\"\n            value={selectedEvent.address.city}\n            onChange={handleChange}\n            required={true}\n          />\n        </Grid>\n        <Button\n          variant=\"outlined\"\n          type=\"submit\"\n          className={classes.formInputs}\n          style={{ marginTop: \"2em\" }}\n        >\n          Submit\n        </Button>\n      </Grid>\n    </form>\n  );\n}\n","/Users/lauraningel/Desktop/final-project/src/components/User/Users.js",["193","194","195","196","197","198"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport NavBar from \"../NavBar\";\nimport axios from \"axios\";\nimport bkg from \"../../assets/repo.jpg\";\nimport {\n  Box,\n  Grid,\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n  Button,\n  CardActionArea,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    width: \"80%\",\n    marginBottom: \"1em\",\n    opacity: \"90%\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"80%\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  plantPic: {\n    width: 151,\n  },\n  image: {\n    minHeight: \"100vh\",\n    backgroundImage: `url(${bkg})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  plantsitting: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n});\n\nexport default function Users({\n  setCurrUser,\n  currUser,\n  setCredentials,\n  handleLogout,\n  allUsers,\n  setAllUsers,\n  history,\n}) {\n  const classes = useStyles();\n\n  console.log(\"Users from users\", allUsers);\n\n  const createUserCard = (el) => {\n    const id = el._id;\n    return (\n      <Card\n        className={classes.root}\n        key={el._id}\n        onClick={() => history.push(`/user/${el._id}`)}\n      >\n        <CardMedia\n          className={classes.plantPic}\n          image={`http://localhost:3000/images/user/${el.profileImg}`}\n          title=\"Plant Preview\"\n        />\n        <div className={classes.details}>\n          <CardContent className={classes.content}>\n            <div className={classes.plantsitting}>\n              <Typography\n                component=\"h5\"\n                variant=\"h5\"\n                style={{ backgroundColor: \"\", display: \"inline\" }}\n              >\n                {el.username}\n              </Typography>\n              {el.plantsitting === \"yes\" ? (\n                <Typography\n                  style={{ backgroundColor: \"yellow\", display: \"inline\" }}\n                >\n                  plantsitting ✓\n                </Typography>\n              ) : null}\n            </div>\n            <Typography>{el.city || \"N/A\"}</Typography>\n            <Typography>\n              currently owns {el.repository.length} plant(s)!\n            </Typography>\n          </CardContent>\n        </div>\n      </Card>\n    );\n  };\n\n  return (\n    <>\n      <NavBar\n        setCurrUser={setCurrUser}\n        setCredentials={setCredentials}\n        handleLogout={handleLogout}\n      />\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        className={classes.image}\n      >\n        {allUsers.length ? (\n          allUsers\n            .filter((el) => el.username !== currUser.username)\n            .map((el) => createUserCard(el))\n        ) : (\n          <Link to=\"/\">\n            <Typography style={{ backgroundColor: \"yellow \" }}>\n              no other users available\n            </Typography>\n          </Link>\n        )}\n      </Grid>\n    </>\n  );\n}\n",["199","200"],"/Users/lauraningel/Desktop/final-project/src/components/User/UserProfile.js",["201"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../../App.css\";\nimport noData from \"../../assets/noData.png\";\nimport bkg from \"../../assets/detailPage.png\";\nimport axios from \"axios\";\nimport NavBar from \"../NavBar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Container,\n  Box,\n  ListItem,\n  Paper,\n  ListItemText,\n  TextField,\n  Card,\n  CardMedia,\n  CardContent,\n} from \"@material-ui/core\";\nimport SentimentSatisfiedOutlinedIcon from \"@material-ui/icons/SentimentSatisfiedOutlined\";\nimport SentimentVeryDissatisfiedIcon from \"@material-ui/icons/SentimentVeryDissatisfied\";\nimport UserEventSection from \"./UserEventSection\";\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    backgroundImage: `url(${bkg})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    padding: theme.spacing(2),\n  },\n  heroButtons: {\n    margin: theme.spacing(1),\n  },\n  container: {\n    textAlign: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginBottom: theme.spacing(2),\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n  picContainer: {\n    textAlign: \"center\",\n    marginBottom: theme.spacing(2),\n    padding: theme.spacing(2),\n    opacity: \"80%\",\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(4),\n  },\n  eventContainer: {\n    paddingTop: theme.spacing(2),\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  careCardContainer: {\n    marginTop: theme.spacing(2),\n  },\n  wishlistContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n  card: {\n    height: \"250px\",\n    marginBottom: theme.spacing(2),\n  },\n  cardMedia: {\n    height: \"75%\",\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function UserProfile({\n  currUser,\n  setCurrUser,\n  setCredentials,\n  handleLogout,\n  myRepo,\n  myWishlist,\n  setMyWishlist,\n  setAllEvents,\n  myEvents,\n  setMyEvents,\n  needsCare,\n  setNeedsCare,\n}) {\n  const classes = useStyles();\n\n  // PROFILE PIC STATES\n  const [selectedPic, setSelectedPic] = useState(null);\n  const [pathToImg, setPathToImg] = useState(null);\n\n  // HANDLE PROFILE PIC UPLOAD\n  const handleChange = (e) => {\n    console.log(e.target.files[0]);\n    setSelectedPic(e.target.files[0]);\n  };\n\n  const handleUpload = (e) => {\n    e.preventDefault();\n    const data = new FormData();\n    data.append(\"profile_pic\", selectedPic);\n    axios\n      .post(\"http://localhost:3000/api/users/upload-profile-pic\", data, {\n        headers: {\n          accept: \"application/json\",\n          \"Accept-Language\": \"en-US,en;q=0.8\",\n          \"Content-Type\": `multipart/form-data; boundary=${data._boundary}`,\n        },\n      })\n      .then((res) => {\n        console.log(res.data);\n        // SET STATE IN PROFILE\n        setPathToImg(res.data.pathToImage);\n        // UPDATE CURR USER PIC IN APP\n        setCurrUser((prev) => ({\n          ...prev,\n          profileImg: res.data.pathToImage,\n        }));\n      })\n      .catch((err) => {\n        console.log(err.message);\n      });\n  };\n\n  // DELETE A PLANT FROM CURR USER WISHLIST\n  const handleDelete = (name) => {\n    console.log(\"to be deleted from list:\", name);\n    axios\n      .delete(`http://localhost:3000/api/users/wish`, { data: { name } })\n      .then((res) => {\n        setMyWishlist((prevWish) => [...prevWish].filter((el) => el !== name));\n      })\n      .catch((err) => console.log(err.message));\n  };\n\n  // FILL REPO PLANTS WITH ARCHETYPE DATA\n  const plantDetails = (name) => {\n    console.log(\n      \"PLANT DETAILS\",\n      myRepo.filter((el) => el.plant.latin === name)\n    );\n    return myRepo.filter((el) => el.plant.latin === name)[0];\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <NavBar\n        setCurrUser={setCurrUser}\n        setCredentials={setCredentials}\n        handleLogout={handleLogout}\n      />\n      <main>\n        {/* Hero unit */}\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            {/* Profile Picture */}\n            <Paper className={classes.picContainer}>\n              <Typography variant=\"h2\">\n                {currUser ? (\n                  <span> hi there, {currUser.username}</span>\n                ) : (\n                  <span>no one is logged in</span>\n                )}\n              </Typography>\n              <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                <SentimentSatisfiedOutlinedIcon fontSize=\"large\" />\n                {currUser ? (\n                  <div\n                    style={{\n                      width: \"200px\",\n                      height: \"200px\",\n                      marginTop: \"10px\",\n                      marginLeft: \"20px\",\n                      marginRight: \"20px\",\n                      overflow: \"hidden\",\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                    }}\n                  >\n                    <img\n                      src={`http://localhost:3000/images/user/${currUser.profileImg}`}\n                      alt=\"profile-pic\"\n                    />\n                  </div>\n                ) : (\n                  <div>Loading...</div>\n                )}\n                <SentimentSatisfiedOutlinedIcon fontSize=\"large\" />\n              </Box>\n              <label htmlFor=\"file-upload\" className=\"custom-file-upload\">\n                change pic\n              </label>\n              <TextField\n                id=\"file-upload\"\n                type=\"file\"\n                name=\"profile_pic\"\n                onChange={(e) => handleChange(e)}\n              />\n              <Button onClick={handleUpload}>upload</Button>\n            </Paper>\n            {/* Button to Plant Repo */}\n            <div className={classes.heroButtons}>\n              <Grid container spacing={2} justify=\"center\">\n                <Grid item>\n                  <Link to=\"/repo\" style={{ textDecoration: \"none\" }}>\n                    <Button variant=\"contained\" color=\"primary\">\n                      my plants\n                    </Button>\n                  </Link>\n                </Grid>\n                <Grid item>\n                  <Link to=\"/messenger\" style={{ textDecoration: \"none\" }}>\n                    <Button variant=\"contained\" color=\"primary\">\n                      messages\n                    </Button>\n                  </Link>\n                </Grid>\n              </Grid>\n            </div>\n          </Container>\n        </div>\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          {/* CARE CALENDAR */}\n          <Grid item xs={12}>\n            <Paper className={classes.container}>\n              <Typography variant=\"h2\">care calendar</Typography>\n              <Typography>babies that need your attention today:</Typography>\n              {!myRepo.length ? (\n                <Box>\n                  <img\n                    src={noData}\n                    style={{ width: \"100px\" }}\n                    alt=\"plant pot\"\n                  />\n                  <Typography>start by adding some plants</Typography>\n                </Box>\n              ) : null}\n              {myRepo.length && !needsCare.length ? (\n                <Box>\n                  <img\n                    src={noData}\n                    style={{ width: \"100px\" }}\n                    alt=\"plant pot\"\n                  />\n                  <Typography>no plant care today!</Typography>\n                </Box>\n              ) : null}\n              {needsCare.length ? (\n                <Container className={classes.careCardContainer}>\n                  {needsCare.length &&\n                    myRepo.length &&\n                    needsCare.map((el, idx) => (\n                      <Card className={classes.card} key={idx}>\n                        <CardMedia\n                          className={classes.cardMedia}\n                          image={plantDetails(el).plant.srcImg}\n                          title=\"Image title\"\n                        />\n                        <CardContent className={classes.cardContent}>\n                          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {plantDetails(el).nickname || el}\n                          </Typography>\n                        </CardContent>\n                      </Card>\n                    ))}\n                </Container>\n              ) : null}\n              <Box>\n                <Link to=\"/repo\">\n                  <Button>show me my plant repo</Button>\n                </Link>\n              </Box>\n            </Paper>\n          </Grid>\n\n          {/* WISHLIST */}\n          <Grid item xs={12}>\n            <Paper className={classes.container}>\n              <Box\n                display=\"flex\"\n                direction=\"column\"\n                justifyContent=\"space-between\"\n              >\n                <img\n                  src={noData}\n                  style={{ width: \"30px\", marginRight: \"10px\" }}\n                  alt=\"plant pot\"\n                />\n                <Typography variant=\"h2\">wishlist</Typography>\n                <img\n                  src={noData}\n                  style={{ width: \"30px\", marginLeft: \"10px\" }}\n                  alt=\"plant pot\"\n                />\n              </Box>\n              <Grid item xs={12} sm={4} className={classes.wishlistContainer}>\n                {myWishlist.length ? (\n                  myWishlist.map((el) => (\n                    <ListItem>\n                      <ListItemText>{el}</ListItemText>\n                      <Button onClick={() => handleDelete(el)}>x</Button>\n                    </ListItem>\n                  ))\n                ) : (\n                  <Box>\n                    <Typography>start by adding some plants</Typography>\n                    <Link to=\"/catalog\">\n                      <Button>inspiration</Button>\n                    </Link>\n                  </Box>\n                )}\n              </Grid>\n            </Paper>\n          </Grid>\n\n          {/* EVENTS */}\n          <Box textAlign=\"center\">\n            <Typography variant=\"h2\">your events</Typography>\n            <Typography>time to mingle with other plant parents</Typography>\n            {myEvents.length ? (\n              <Grid container spacing={4} className={classes.eventContainer}>\n                {myEvents.map((card) => (\n                  <UserEventSection\n                    card={card}\n                    currUser={currUser}\n                    setAllEvents={setAllEvents}\n                    setMyEvents={setMyEvents}\n                    myEvents={myEvents}\n                  />\n                ))}\n              </Grid>\n            ) : (\n              <Box\n                className={classes.eventContainer}\n                display=\"flex\"\n                flexDirection=\"column\"\n                alignItems=\"center\"\n              >\n                <SentimentVeryDissatisfiedIcon fontSize=\"large\" />\n                <Link to=\"/events\">\n                  <Button>show me all events</Button>\n                </Link>\n              </Box>\n            )}\n          </Box>\n        </Container>\n      </main>\n    </React.Fragment>\n  );\n}\n","/Users/lauraningel/Desktop/final-project/src/components/User/UserEventSection.js",[],["202","203"],"/Users/lauraningel/Desktop/final-project/src/components/Plants/PlantDetail.js",[],["204","205"],"/Users/lauraningel/Desktop/final-project/src/components/Plants/FormUpdatePlant.js",[],"/Users/lauraningel/Desktop/final-project/src/components/Events/ModalAddEvent.js",[],["206","207"],"/Users/lauraningel/Desktop/final-project/src/components/Plants/PlantRepo.js",[],"/Users/lauraningel/Desktop/final-project/src/components/Plants/PlantCatalog.js",[],"/Users/lauraningel/Desktop/final-project/src/components/Plants/ModalUpdatePlant.js",[],["208","209"],"/Users/lauraningel/Desktop/final-project/src/components/User/VisitedProfile.js",["210","211","212"],"/Users/lauraningel/Desktop/final-project/src/components/User/Messenger.js",["213","214"],"/Users/lauraningel/Desktop/final-project/src/components/Plants/FormAddPlant.js",[],"/Users/lauraningel/Desktop/final-project/src/components/Plants/ModalWishlist.js",[],["215","216"],"/Users/lauraningel/Desktop/final-project/src/components/Plants/SearchCatalog.js",[],["217","218"],"/Users/lauraningel/Desktop/final-project/src/contexts/ConversationsProvider.js",["219","220","221"],"import React, { useContext, useState, useEffect, useCallback } from \"react\";\nimport { useSocket } from \"./SocketProvider\";\n\nconst ConversationsContext = React.createContext();\n\nexport function useConversations() {\n  return useContext(ConversationsContext);\n}\n\nexport function ConversationsProvider({\n  currUser,\n  myMessages,\n  setMyMessages,\n  children,\n}) {\n  // myMessages holds chat history sorted by recipient\n  const [selectedConversationID, setSelectedConversationID] = useState(\"\");\n  const socket = useSocket();\n\n  // TEST\n  const [selectedConvo, setSelectedConvo] = useState(null);\n\n  const addMessageToConversation = ({ recipient, text, sender }) => {\n    // find conversation in all conversations\n    let oldConvo = myMessages.find(\n      (el) => el.contact === recipient || el.contact === sender\n    );\n    // either add new msg to old convo\n    if (oldConvo) {\n      // CHANGE THIS so msg obj is created server-side and you get createdAt prop\n      setMyMessages((prev) => [\n        ...prev,\n        oldConvo.messages.push({ recipient, text, sender }),\n      ]);\n    } else {\n      // or create new convo for msg and push to messages arr\n      let newConvo = {\n        contact: sender,\n        messages: [\n          {\n            recipient,\n            sender,\n            text,\n          },\n        ],\n      };\n      setMyMessages((prev) => [...prev, newConvo]);\n    }\n  };\n\n  useEffect(() => {\n    if (socket == null) return;\n    socket.on(\"receive-message\", addMessageToConversation);\n    // remove old eventListeners so new ones aren't constantly added on top\n    return () => socket.off(\"receive-message\");\n  }, [socket, addMessageToConversation]);\n\n  function sendMessage(recipient, text) {\n    // send a recipient id and the msg text to server\n    socket.emit(\"send-message\", { recipient, text });\n    addMessageToConversation({ recipient, text, sender: currUser._id });\n  }\n\n  const value = {\n    myMessages,\n    setMyMessages,\n    selectedConvo,\n    setSelectedConvo,\n    setSelectedConversationID,\n    sendMessage,\n  };\n\n  return (\n    <ConversationsContext.Provider value={value}>\n      {children}\n    </ConversationsContext.Provider>\n  );\n}\n","/Users/lauraningel/Desktop/final-project/src/components/Plants/ModalRepo.js",[],"/Users/lauraningel/Desktop/final-project/src/contexts/SocketProvider.js",[],{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","replacedBy":"225"},{"ruleId":"222","replacedBy":"226"},{"ruleId":"224","replacedBy":"227"},{"ruleId":"228","severity":1,"message":"229","line":2,"column":37,"nodeType":"230","messageId":"231","endLine":2,"endColumn":45},{"ruleId":"232","severity":1,"message":"233","line":239,"column":6,"nodeType":"234","endLine":239,"endColumn":16,"suggestions":"235"},{"ruleId":"228","severity":1,"message":"236","line":17,"column":10,"nodeType":"230","messageId":"231","endLine":17,"endColumn":16},{"ruleId":"222","replacedBy":"237"},{"ruleId":"224","replacedBy":"238"},{"ruleId":"222","replacedBy":"239"},{"ruleId":"224","replacedBy":"240"},{"ruleId":"228","severity":1,"message":"241","line":4,"column":3,"nodeType":"230","messageId":"231","endLine":4,"endColumn":9},{"ruleId":"228","severity":1,"message":"242","line":14,"column":8,"nodeType":"230","messageId":"231","endLine":14,"endColumn":24},{"ruleId":"222","replacedBy":"243"},{"ruleId":"224","replacedBy":"244"},{"ruleId":"222","replacedBy":"245"},{"ruleId":"224","replacedBy":"246"},{"ruleId":"222","replacedBy":"247"},{"ruleId":"224","replacedBy":"248"},{"ruleId":"228","severity":1,"message":"249","line":1,"column":27,"nodeType":"230","messageId":"231","endLine":1,"endColumn":36},{"ruleId":"228","severity":1,"message":"250","line":2,"column":10,"nodeType":"230","messageId":"231","endLine":2,"endColumn":19},{"ruleId":"228","severity":1,"message":"251","line":3,"column":27,"nodeType":"230","messageId":"231","endLine":3,"endColumn":37},{"ruleId":"228","severity":1,"message":"252","line":4,"column":10,"nodeType":"230","messageId":"231","endLine":4,"endColumn":22},{"ruleId":"228","severity":1,"message":"253","line":4,"column":24,"nodeType":"230","messageId":"231","endLine":4,"endColumn":41},{"ruleId":"228","severity":1,"message":"254","line":22,"column":9,"nodeType":"230","messageId":"231","endLine":22,"endColumn":16},{"ruleId":"255","severity":1,"message":"256","line":117,"column":11,"nodeType":"257","endLine":117,"endColumn":29},{"ruleId":"258","severity":1,"message":"259","line":17,"column":3,"nodeType":"260","messageId":"261","endLine":17,"endColumn":7},{"ruleId":"222","replacedBy":"262"},{"ruleId":"224","replacedBy":"263"},{"ruleId":"222","replacedBy":"264"},{"ruleId":"224","replacedBy":"265"},{"ruleId":"228","severity":1,"message":"249","line":1,"column":27,"nodeType":"230","messageId":"231","endLine":1,"endColumn":36},{"ruleId":"228","severity":1,"message":"250","line":2,"column":10,"nodeType":"230","messageId":"231","endLine":2,"endColumn":19},{"ruleId":"228","severity":1,"message":"251","line":3,"column":27,"nodeType":"230","messageId":"231","endLine":3,"endColumn":37},{"ruleId":"228","severity":1,"message":"252","line":4,"column":10,"nodeType":"230","messageId":"231","endLine":4,"endColumn":22},{"ruleId":"228","severity":1,"message":"253","line":4,"column":24,"nodeType":"230","messageId":"231","endLine":4,"endColumn":41},{"ruleId":"228","severity":1,"message":"266","line":7,"column":10,"nodeType":"230","messageId":"231","endLine":7,"endColumn":20},{"ruleId":"228","severity":1,"message":"267","line":27,"column":10,"nodeType":"230","messageId":"231","endLine":27,"endColumn":24},{"ruleId":"255","severity":1,"message":"256","line":139,"column":11,"nodeType":"257","endLine":139,"endColumn":29},{"ruleId":"228","severity":1,"message":"268","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":25},{"ruleId":"228","severity":1,"message":"269","line":4,"column":8,"nodeType":"230","messageId":"231","endLine":4,"endColumn":13},{"ruleId":"228","severity":1,"message":"270","line":7,"column":3,"nodeType":"230","messageId":"231","endLine":7,"endColumn":6},{"ruleId":"228","severity":1,"message":"271","line":13,"column":3,"nodeType":"230","messageId":"231","endLine":13,"endColumn":9},{"ruleId":"228","severity":1,"message":"272","line":14,"column":3,"nodeType":"230","messageId":"231","endLine":14,"endColumn":17},{"ruleId":"228","severity":1,"message":"273","line":64,"column":11,"nodeType":"230","messageId":"231","endLine":64,"endColumn":13},{"ruleId":"222","replacedBy":"274"},{"ruleId":"224","replacedBy":"275"},{"ruleId":"228","severity":1,"message":"276","line":101,"column":10,"nodeType":"230","messageId":"231","endLine":101,"endColumn":19},{"ruleId":"222","replacedBy":"277"},{"ruleId":"224","replacedBy":"278"},{"ruleId":"222","replacedBy":"279"},{"ruleId":"224","replacedBy":"280"},{"ruleId":"222","replacedBy":"281"},{"ruleId":"224","replacedBy":"282"},{"ruleId":"222","replacedBy":"283"},{"ruleId":"224","replacedBy":"284"},{"ruleId":"228","severity":1,"message":"285","line":22,"column":8,"nodeType":"230","messageId":"231","endLine":22,"endColumn":13},{"ruleId":"228","severity":1,"message":"286","line":65,"column":9,"nodeType":"230","messageId":"231","endLine":65,"endColumn":18},{"ruleId":"228","severity":1,"message":"287","line":76,"column":9,"nodeType":"230","messageId":"231","endLine":76,"endColumn":28},{"ruleId":"228","severity":1,"message":"288","line":45,"column":5,"nodeType":"230","messageId":"231","endLine":45,"endColumn":25},{"ruleId":"228","severity":1,"message":"289","line":49,"column":5,"nodeType":"230","messageId":"231","endLine":49,"endColumn":30},{"ruleId":"222","replacedBy":"290"},{"ruleId":"224","replacedBy":"291"},{"ruleId":"222","replacedBy":"292"},{"ruleId":"224","replacedBy":"293"},{"ruleId":"228","severity":1,"message":"294","line":1,"column":50,"nodeType":"230","messageId":"231","endLine":1,"endColumn":61},{"ruleId":"228","severity":1,"message":"295","line":17,"column":10,"nodeType":"230","messageId":"231","endLine":17,"endColumn":32},{"ruleId":"232","severity":1,"message":"296","line":23,"column":9,"nodeType":"297","endLine":49,"endColumn":4,"suggestions":"298"},"no-native-reassign",["299"],"no-negated-in-lhs",["300"],["299"],["300"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'turnMessagesIntoConversations'. Either include it or remove the dependency array.","ArrayExpression",["301"],"'logout' is defined but never used.",["299"],["300"],["299"],["300"],"'Avatar' is defined but never used.","'LockOutlinedIcon' is defined but never used.",["299"],["300"],["299"],["300"],["299"],["300"],"'useEffect' is defined but never used.","'useParams' is defined but never used.","'Typography' is defined but never used.","'ToggleButton' is defined but never used.","'ToggleButtonGroup' is defined but never used.","'history' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-dupe-keys","Duplicate key 'root'.","ObjectExpression","unexpected",["299"],["300"],["299"],["300"],"'useHistory' is defined but never used.","'eventEditInput' is assigned a value but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'Box' is defined but never used.","'Button' is defined but never used.","'CardActionArea' is defined but never used.","'id' is assigned a value but never used.",["299"],["300"],"'pathToImg' is assigned a value but never used.",["299"],["300"],["299"],["300"],["299"],["300"],["299"],["300"],"'smile' is defined but never used.","'eventPics' is assigned a value but never used.","'handleOpenMessenger' is assigned a value but never used.","'selectedConversation' is assigned a value but never used.","'setSelectedConversationID' is assigned a value but never used.",["299"],["300"],["299"],["300"],"'useCallback' is defined but never used.","'selectedConversationID' is assigned a value but never used.","The 'addMessageToConversation' function makes the dependencies of useEffect Hook (at line 56) change on every render. To fix this, wrap the definition of 'addMessageToConversation' in its own useCallback() Hook.","VariableDeclarator",["302"],"no-global-assign","no-unsafe-negation",{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},"Update the dependencies array to be: [currUser, turnMessagesIntoConversations]",{"range":"307","text":"308"},"Wrap the definition of 'addMessageToConversation' in its own useCallback() Hook.",{"range":"309","text":"310"},[7378,7388],"[currUser, turnMessagesIntoConversations]",[628,1387],"useCallback(({ recipient, text, sender }) => {\n    // find conversation in all conversations\n    let oldConvo = myMessages.find(\n      (el) => el.contact === recipient || el.contact === sender\n    );\n    // either add new msg to old convo\n    if (oldConvo) {\n      // CHANGE THIS so msg obj is created server-side and you get createdAt prop\n      setMyMessages((prev) => [\n        ...prev,\n        oldConvo.messages.push({ recipient, text, sender }),\n      ]);\n    } else {\n      // or create new convo for msg and push to messages arr\n      let newConvo = {\n        contact: sender,\n        messages: [\n          {\n            recipient,\n            sender,\n            text,\n          },\n        ],\n      };\n      setMyMessages((prev) => [...prev, newConvo]);\n    }\n  })"]