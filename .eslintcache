[{"/Users/lauraningel/Desktop/final-project/src/reportWebVitals.js":"1","/Users/lauraningel/Desktop/final-project/src/index.js":"2","/Users/lauraningel/Desktop/final-project/src/App.js":"3","/Users/lauraningel/Desktop/final-project/src/components/PlantCatalog.js":"4","/Users/lauraningel/Desktop/final-project/src/components/PlantDetail.js":"5","/Users/lauraningel/Desktop/final-project/src/components/NavBar.js":"6","/Users/lauraningel/Desktop/final-project/src/components/SearchCatalog.js":"7","/Users/lauraningel/Desktop/final-project/src/components/ModalWishlist.js":"8","/Users/lauraningel/Desktop/final-project/src/components/ModalRepo.js":"9","/Users/lauraningel/Desktop/final-project/src/components/FormAddPlant.js":"10","/Users/lauraningel/Desktop/final-project/src/components/PlantRepo.js":"11","/Users/lauraningel/Desktop/final-project/src/components/UserProfile.js":"12","/Users/lauraningel/Desktop/final-project/src/components/Login.js":"13","/Users/lauraningel/Desktop/final-project/src/components/Signup.js":"14","/Users/lauraningel/Desktop/final-project/src/utils/auth.js":"15","/Users/lauraningel/Desktop/final-project/src/components/ProtectedRoute.js":"16","/Users/lauraningel/Desktop/final-project/src/components/Events.js":"17","/Users/lauraningel/Desktop/final-project/src/components/ModalAddEvent.js":"18","/Users/lauraningel/Desktop/final-project/src/components/FormAddEvent.js":"19","/Users/lauraningel/Desktop/final-project/src/components/UserProfileCard.js":"20","/Users/lauraningel/Desktop/final-project/src/components/Users.js":"21","/Users/lauraningel/Desktop/final-project/src/components/FormUpdatePlant.js":"22","/Users/lauraningel/Desktop/final-project/src/components/ModalUpdatePlant.js":"23","/Users/lauraningel/Desktop/final-project/src/components/SearchEvents.js":"24","/Users/lauraningel/Desktop/final-project/src/components/UserEventSection.js":"25"},{"size":362,"mtime":1606142850419,"results":"26","hashOfConfig":"27"},{"size":572,"mtime":1606306528206,"results":"28","hashOfConfig":"27"},{"size":10739,"mtime":1609413145668,"results":"29","hashOfConfig":"27"},{"size":3395,"mtime":1607246224337,"results":"30","hashOfConfig":"27"},{"size":7149,"mtime":1607526048532,"results":"31","hashOfConfig":"27"},{"size":3305,"mtime":1607609012546,"results":"32","hashOfConfig":"27"},{"size":692,"mtime":1606500161688,"results":"33","hashOfConfig":"27"},{"size":1221,"mtime":1607084716896,"results":"34","hashOfConfig":"27"},{"size":1158,"mtime":1607077064399,"results":"35","hashOfConfig":"27"},{"size":5580,"mtime":1609583413978,"results":"36","hashOfConfig":"27"},{"size":4621,"mtime":1609586786341,"results":"37","hashOfConfig":"27"},{"size":10726,"mtime":1609413141270,"results":"38","hashOfConfig":"27"},{"size":4220,"mtime":1607514629030,"results":"39","hashOfConfig":"27"},{"size":3571,"mtime":1607506516049,"results":"40","hashOfConfig":"27"},{"size":2301,"mtime":1609413147310,"results":"41","hashOfConfig":"27"},{"size":1153,"mtime":1609247400605,"results":"42","hashOfConfig":"27"},{"size":5799,"mtime":1609255572932,"results":"43","hashOfConfig":"27"},{"size":1202,"mtime":1607260156016,"results":"44","hashOfConfig":"27"},{"size":4015,"mtime":1608994586469,"results":"45","hashOfConfig":"27"},{"size":3074,"mtime":1607531000146,"results":"46","hashOfConfig":"27"},{"size":3595,"mtime":1607514561266,"results":"47","hashOfConfig":"27"},{"size":6849,"mtime":1609586592907,"results":"48","hashOfConfig":"27"},{"size":1330,"mtime":1609584656395,"results":"49","hashOfConfig":"27"},{"size":707,"mtime":1607445448626,"results":"50","hashOfConfig":"27"},{"size":3211,"mtime":1609413143616,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"tv9s6g",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lauraningel/Desktop/final-project/src/reportWebVitals.js",[],["116","117"],"/Users/lauraningel/Desktop/final-project/src/index.js",[],["118","119"],"/Users/lauraningel/Desktop/final-project/src/App.js",["120","121"],"/Users/lauraningel/Desktop/final-project/src/components/PlantCatalog.js",["122"],"import React, { useState } from \"react\";\nimport NavBar from \"./NavBar\";\nimport bkg from \"../assets/detailPage.png\";\nimport {\n  CardContent,\n  Grid,\n  Card,\n  CardMedia,\n  CircularProgress,\n  Typography,\n  Box,\n} from \"@material-ui/core\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SearchCatalog from \"./SearchCatalog\";\n\nconst useStyles = makeStyles({\n  catalogContainer: {\n    paddingTop: \"20px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\",\n  },\n  cardMedia: {\n    margin: \"auto\",\n  },\n  cardContent: {\n    textAlign: \"center\",\n  },\n});\n\nexport default function PlantCatalog({\n  allPlants,\n  history,\n  setCurrUser,\n  setCredentials,\n  handleLogout,\n}) {\n  const classes = useStyles();\n\n  // PAGINATION STATE\n  const [page, setPage] = useState(1);\n  // SEARCH STATE (only enable pagination if !isSearch, otherwise hide)\n  const [plantSearch, setPlantSearch] = useState(\"\");\n  const [isSearch, setIsSearch] = useState(false);\n\n  // HANDLE PAGINATION\n  const handleChangePage = (_, page) => {\n    setPage(page);\n  };\n\n  const idxLastPlant = page * 15;\n  const idxFirstPlant = idxLastPlant - 15;\n\n  // CREATE EACH PLANT PREVIEW CARD\n  const createPlantCard = (el) => {\n    return (\n      <Grid item xs={12} sm={4} key={el._id}>\n        <Card onClick={() => history.push(`/${el._id}`)} square={true}>\n          <Box display=\"flex\">\n            <CardMedia\n              className={classes.cardMedia}\n              image={el.srcImg}\n              style={{ width: \"130px\", height: \"130px\" }}\n            ></CardMedia>\n            <CardMedia\n              className={classes.cardMedia}\n              image={el.srcImg}\n              style={{ width: \"130px\", height: \"130px\" }}\n            ></CardMedia>\n            <CardMedia\n              className={classes.cardMedia}\n              image={el.srcImg}\n              style={{ width: \"130px\", height: \"130px\" }}\n            ></CardMedia>\n          </Box>\n          <CardContent className={classes.cardContent}>\n            <Typography style={{ fontWeight: 700 }}>\n              {el.latin || \"-\"}\n            </Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n    );\n  };\n\n  return (\n    <>\n      <NavBar\n        setCurrUser={setCurrUser}\n        setCredentials={setCredentials}\n        handleLogout={handleLogout}\n      />\n      {allPlants ? (\n        <Grid container spacing={2} className={classes.catalogContainer}>\n          <SearchCatalog\n            setPlantSearch={setPlantSearch}\n            setIsSearch={setIsSearch}\n          />\n          {isSearch\n            ? allPlants\n                .sort((a, b) => a.latin - b.latin)\n                .map(\n                  (el) => el.latin.includes(plantSearch) && createPlantCard(el)\n                )\n            : allPlants\n                .sort((a, b) => a.latin - b.latin)\n                .slice(idxFirstPlant, idxLastPlant)\n                .map((el) => createPlantCard(el))}\n\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n            {!isSearch && (\n              <Pagination\n                shape=\"rounded\"\n                count={Math.ceil(allPlants.length / 15)}\n                page={page}\n                onChange={handleChangePage}\n              />\n            )}\n          </Grid>\n        </Grid>\n      ) : (\n        <CircularProgress />\n      )}\n    </>\n  );\n}\n","/Users/lauraningel/Desktop/final-project/src/components/PlantDetail.js",["123"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\nimport ModalRepo from \"./ModalRepo\";\nimport ModalWishlist from \"./ModalWishlist\";\nimport bkg from \"../assets/detailPage.png\";\nimport {\n  Hidden,\n  CircularProgress,\n  Grid,\n  Paper,\n  Typography,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Container,\n} from \"@material-ui/core\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport SentimentSatisfiedAltIcon from \"@material-ui/icons/SentimentSatisfiedAlt\";\n\nconst useStyles = makeStyles({\n  paperContainer: {\n    width: \"80%\",\n    padding: \"2em\",\n    margin: \"auto\",\n    textAlign: \"center\",\n  },\n  image: {\n    backgroundImage: `url(${bkg})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n});\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    fontWeight: \"600\",\n  },\n  body: {\n    color: \"#0000ff\",\n  },\n}))(TableCell);\n\nexport default function PlantDetail({\n  match,\n  setMyRepo,\n  currUser,\n  setCurrUser,\n  myWishlist,\n  setMyWishlist,\n  handleLogout,\n}) {\n  // console.log({setMyRepo})\n  const classes = useStyles();\n  // SET SINGLE PLANT\n  const [singlePlant, setSinglePlant] = useState(null);\n  const [isError, setIsError] = useState(false);\n  // HANDLE MODAL FORM REPO\n  const [openRepo, setOpenRepo] = useState(false);\n  const [openWishlist, setOpenWishlist] = useState(false);\n\n  console.log(match.params.plantId);\n\n  // FETCH DETAIL INFO FOR PLANT ARCHETYPE\n  useEffect(() => {\n    fetch(`http://localhost:3000/api/plants/${match.params.plantId}`)\n      .then((res) => res.json())\n      .then((data) => setSinglePlant(data))\n      .catch((err) => setIsError(true));\n  }, [match.params.plantId]); // why does this go here again?\n\n  const handleClickOpen = (e) => {\n    console.log(e.target.innerText);\n    if (e.target.innerText.includes(\"REPO\")) {\n      setOpenRepo(true);\n    } else if (e.target.innerText.includes(\"WISHLIST\")) {\n      setOpenWishlist(true);\n    }\n  };\n\n  const createPlantDetail = (singlePlant) => {\n    const {\n      latin,\n      common,\n      description,\n      srcImg,\n      site,\n      temp,\n      water,\n      feeding,\n      tip,\n    } = singlePlant;\n    return (\n      <Grid container>\n        <Grid item xs={12} style={{ marginBottom: \"20px\" }}>\n          <Typography variant=\"h1\" color=\"primary\">\n            {latin}\n          </Typography>\n          <Typography\n            variant=\"h2\"\n            style={{ backgroundColor: \"yellow\" }}\n            display=\"inline\"\n          >\n            {common || \"-\"}\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography variant=\"body1\">{description}</Typography>\n        </Grid>\n        <Grid container display=\"flex\" alignItems=\"center\">\n          <Grid item xs={12} sm={6} md={4}>\n            <img\n              src={srcImg}\n              // style={{ maxHeight: \"400px\", margin: \"auto\" }}\n              style={{ maxWidth: \"300px\", margin: \"auto\" }}\n              alt=\"detail pic of the plant\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={6} md={8}>\n            <TableContainer>\n              <Table\n                className={classes.table}\n                size=\"medium\"\n                aria-label=\"a dense table\"\n              >\n                <TableHead>\n                  <TableRow className={classes.row}>\n                    <StyledTableCell align=\"left\">Category</StyledTableCell>\n                    <StyledTableCell align=\"left\">Instructions</StyledTableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  <TableRow>\n                    <StyledTableCell component=\"th\" scope=\"row\">\n                      Site\n                    </StyledTableCell>\n                    <TableCell align=\"left\">{site}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <StyledTableCell component=\"th\" scope=\"row\">\n                      Temperature\n                    </StyledTableCell>\n                    <TableCell align=\"left\">{temp}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <StyledTableCell component=\"th\" scope=\"row\">\n                      Water\n                    </StyledTableCell>\n                    <TableCell align=\"left\">{water}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <StyledTableCell component=\"th\" scope=\"row\">\n                      Feeding\n                    </StyledTableCell>\n                    <TableCell align=\"left\">{feeding}</TableCell>\n                  </TableRow>\n                  <TableRow>\n                    <StyledTableCell component=\"th\" scope=\"row\">\n                      Tip\n                    </StyledTableCell>\n                    <TableCell align=\"left\">{tip}</TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n        </Grid>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"space-around\"\n          alignItems=\"flex-end\"\n        >\n          <Grid item style={{ marginTop: \"20px\" }}>\n            <Button variant=\"outlined\" onClick={(e) => handleClickOpen(e)}>\n              Add to repo\n            </Button>\n            <Button\n              variant=\"outlined\"\n              onClick={(e) => {\n                handleClickOpen(e);\n              }}\n            >\n              ♡ Wishlist ♡\n            </Button>\n          </Grid>\n          <Typography>\n            <Link to=\"/catalog\">See all Plants</Link>\n          </Typography>\n        </Grid>\n      </Grid>\n    );\n  };\n\n  return (\n    <>\n      <NavBar handleLogout={handleLogout} />\n      {/* <Grid className={classes.image}> */}\n      <Grid\n        className={classes.image}\n        container\n        spacing={0}\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"center\"\n        style={{ minHeight: \"100vh\" }}\n        // display=\"flex\"\n        // align=\"center\"\n        // direction=\"column\"\n        // justify=\"center\"\n      >\n        <Container display=\"flex\" align=\"center\">\n          <SentimentSatisfiedAltIcon fontSize=\"large\" />\n          <Paper elevation={3} className={classes.paperContainer}>\n            {!singlePlant && <CircularProgress />}\n            {singlePlant && createPlantDetail(singlePlant)}\n            {isError && <h1>this plant is not in our database</h1>}\n          </Paper>\n          <SentimentSatisfiedAltIcon fontSize=\"large\" />\n        </Container>\n        <ModalRepo\n          openRepo={openRepo}\n          setOpenRepo={setOpenRepo}\n          setMyRepo={setMyRepo}\n        />\n        <ModalWishlist\n          openWishlist={openWishlist}\n          setOpenWishlist={setOpenWishlist}\n          plantId={match.params.plantId}\n          singlePlant={singlePlant}\n          currUser={currUser}\n          setCurrUser={setCurrUser}\n          myWishlist={myWishlist}\n          setMyWishlist={setMyWishlist}\n        />\n      </Grid>\n    </>\n  );\n}\n",["124","125"],"/Users/lauraningel/Desktop/final-project/src/components/NavBar.js",["126"],"/Users/lauraningel/Desktop/final-project/src/components/SearchCatalog.js",[],["127","128"],"/Users/lauraningel/Desktop/final-project/src/components/ModalWishlist.js",[],["129","130"],"/Users/lauraningel/Desktop/final-project/src/components/ModalRepo.js",[],["131","132"],"/Users/lauraningel/Desktop/final-project/src/components/FormAddPlant.js",[],"/Users/lauraningel/Desktop/final-project/src/components/PlantRepo.js",[],"/Users/lauraningel/Desktop/final-project/src/components/UserProfile.js",["133","134","135","136","137","138"],"/Users/lauraningel/Desktop/final-project/src/components/Login.js",[],"/Users/lauraningel/Desktop/final-project/src/components/Signup.js",["139","140"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  FormControlLabel,\n  Checkbox,\n  Typography,\n  Paper,\n  Grid,\n} from \"@material-ui/core/\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport bkg from \"../assets/detailPage.png\";\nimport logo from \"../assets/logo.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: \"60px\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  image: {\n    height: \"100vh\",\n    backgroundImage: `url(${bkg})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nexport default function SignIn({ handleSetNewUser, handleRegister }) {\n  const classes = useStyles();\n\n  return (\n    <Grid className={classes.image}>\n      <Container component=\"main\" maxWidth=\"sm\">\n        <CssBaseline />\n        <Paper className={classes.paper}>\n          {/* <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar> */}\n          <img src={logo} alt=\"logo\" />\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"username\"\n              name=\"username\"\n              autoComplete=\"username\"\n              autoFocus\n              onChange={(e) => handleSetNewUser(e)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={(e) => handleSetNewUser(e)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"city\"\n              label=\"city\"\n              type=\"city\"\n              id=\"city\"\n              onChange={(e) => handleSetNewUser(e)}\n            />\n            <FormControlLabel\n              control={\n                <Checkbox name=\"plantsitting\" value=\"yes\" color=\"primary\" />\n              }\n              label=\"Are you up for plant sitting?\"\n              onChange={(e) => handleSetNewUser(e)}\n            />\n            <Button\n              // type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={(e) => handleRegister(e)}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item>\n                <Typography>\n                  <Link to=\"/login\">Already a member?</Link>\n                </Typography>\n              </Grid>\n            </Grid>\n          </form>\n        </Paper>\n      </Container>\n    </Grid>\n  );\n}\n",["141","142"],"/Users/lauraningel/Desktop/final-project/src/utils/auth.js",[],"/Users/lauraningel/Desktop/final-project/src/components/ProtectedRoute.js",[],["143","144"],"/Users/lauraningel/Desktop/final-project/src/components/Events.js",[],"/Users/lauraningel/Desktop/final-project/src/components/ModalAddEvent.js",[],["145","146"],"/Users/lauraningel/Desktop/final-project/src/components/FormAddEvent.js",["147","148","149","150","151","152"],"/Users/lauraningel/Desktop/final-project/src/components/UserProfileCard.js",[],["153","154"],"/Users/lauraningel/Desktop/final-project/src/components/Users.js",["155","156","157","158","159"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\nimport axios from \"axios\";\nimport bkg from \"../assets/repo.jpg\";\nimport {\n  Box,\n  Grid,\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n  Button,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    width: \"80%\",\n    marginBottom: \"1em\",\n    opacity: \"90%\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"80%\",\n  },\n  content: {\n    flex: \"1 0 auto\",\n  },\n  plantPic: {\n    width: 151,\n  },\n  image: {\n    minHeight: \"100vh\",\n    backgroundImage: `url(${bkg})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  plantsitting: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n});\n\nexport default function Users({\n  setCurrUser,\n  currUser,\n  setCredentials,\n  handleLogout,\n  allUsers,\n  setAllUsers,\n}) {\n  const classes = useStyles();\n\n  console.log(\"Users from users\", allUsers);\n\n  const createUserCard = (el) => {\n    const id = el._id;\n    // console.log(\"EL FROM USERS\", el);\n    return (\n      // <Card>\n      <Card className={classes.root}>\n        <CardMedia\n          className={classes.plantPic}\n          image={`http://localhost:3000/${el.profileImg}`}\n          title=\"Plant Preview\"\n        />\n        {/* <div> */}\n        <div className={classes.details}>\n          {/* <CardContent> */}\n          <CardContent className={classes.content}>\n            <div className={classes.plantsitting}>\n              <Typography\n                component=\"h5\"\n                variant=\"h5\"\n                style={{ backgroundColor: \"\", display: \"inline\" }}\n              >\n                {el.username}\n                {/* <Button onClick={(e) => handleClickOpen(e)}>open details modal</Button> */}\n              </Typography>\n              {el.plantsitting === \"yes\" ? (\n                <Typography\n                  style={{ backgroundColor: \"yellow\", display: \"inline\" }}\n                >\n                  plantsitting ✓\n                </Typography>\n              ) : null}\n            </div>\n            <Typography>{el.city || \"N/A\"}</Typography>\n            <Typography>\n              currently owns {el.repository.length} plant(s)!\n            </Typography>\n\n            {/* <div style={{ width: \"100%\", backgroundColor: \"salmon\" }}>\n              <Box display=\"flex\" p={1}>\n                <Button onClick={() => history.push(`/${el.plant._id}`)}>\n                  care overview\n                </Button>\n                <Grid item>\n                  <Button>edit</Button>\n                  <Button>delete</Button>\n                </Grid>\n              </Box>\n            </div> */}\n          </CardContent>\n        </div>\n      </Card>\n    );\n  };\n\n  return (\n    <>\n      <NavBar\n        setCurrUser={setCurrUser}\n        setCredentials={setCredentials}\n        handleLogout={handleLogout}\n      />\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        className={classes.image}\n      >\n        {allUsers.length ? (\n          allUsers\n            .filter((el) => el.username !== currUser.username)\n            .map((el) => createUserCard(el))\n        ) : (\n          <Link to=\"/\">\n            <Typography style={{ backgroundColor: \"yellow \" }}>\n              no other users available\n            </Typography>\n          </Link>\n        )}\n      </Grid>\n    </>\n  );\n}\n","/Users/lauraningel/Desktop/final-project/src/components/FormUpdatePlant.js",["160","161"],"/Users/lauraningel/Desktop/final-project/src/components/ModalUpdatePlant.js",[],"/Users/lauraningel/Desktop/final-project/src/components/SearchEvents.js",[],"/Users/lauraningel/Desktop/final-project/src/components/UserEventSection.js",[],{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"162","replacedBy":"166"},{"ruleId":"164","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":136,"column":6,"nodeType":"170","endLine":136,"endColumn":8,"suggestions":"171"},{"ruleId":"168","severity":1,"message":"172","line":189,"column":6,"nodeType":"170","endLine":189,"endColumn":14,"suggestions":"173"},{"ruleId":"174","severity":1,"message":"175","line":3,"column":8,"nodeType":"176","messageId":"177","endLine":3,"endColumn":11},{"ruleId":"174","severity":1,"message":"178","line":8,"column":3,"nodeType":"176","messageId":"177","endLine":8,"endColumn":9},{"ruleId":"162","replacedBy":"179"},{"ruleId":"164","replacedBy":"180"},{"ruleId":"174","severity":1,"message":"181","line":17,"column":10,"nodeType":"176","messageId":"177","endLine":17,"endColumn":16},{"ruleId":"162","replacedBy":"182"},{"ruleId":"164","replacedBy":"183"},{"ruleId":"162","replacedBy":"184"},{"ruleId":"164","replacedBy":"185"},{"ruleId":"162","replacedBy":"186"},{"ruleId":"164","replacedBy":"187"},{"ruleId":"174","severity":1,"message":"188","line":18,"column":3,"nodeType":"176","messageId":"177","endLine":18,"endColumn":7},{"ruleId":"174","severity":1,"message":"189","line":100,"column":10,"nodeType":"176","messageId":"177","endLine":100,"endColumn":19},{"ruleId":"190","severity":1,"message":"191","line":235,"column":19,"nodeType":"192","endLine":235,"endColumn":66},{"ruleId":"190","severity":1,"message":"191","line":241,"column":19,"nodeType":"192","endLine":241,"endColumn":66},{"ruleId":"190","severity":1,"message":"191","line":281,"column":17,"nodeType":"192","endLine":281,"endColumn":63},{"ruleId":"190","severity":1,"message":"191","line":283,"column":17,"nodeType":"192","endLine":283,"endColumn":63},{"ruleId":"174","severity":1,"message":"193","line":4,"column":3,"nodeType":"176","messageId":"177","endLine":4,"endColumn":9},{"ruleId":"174","severity":1,"message":"194","line":14,"column":8,"nodeType":"176","messageId":"177","endLine":14,"endColumn":24},{"ruleId":"162","replacedBy":"195"},{"ruleId":"164","replacedBy":"196"},{"ruleId":"162","replacedBy":"197"},{"ruleId":"164","replacedBy":"198"},{"ruleId":"162","replacedBy":"199"},{"ruleId":"164","replacedBy":"200"},{"ruleId":"174","severity":1,"message":"201","line":1,"column":27,"nodeType":"176","messageId":"177","endLine":1,"endColumn":36},{"ruleId":"174","severity":1,"message":"202","line":2,"column":10,"nodeType":"176","messageId":"177","endLine":2,"endColumn":19},{"ruleId":"174","severity":1,"message":"203","line":3,"column":27,"nodeType":"176","messageId":"177","endLine":3,"endColumn":37},{"ruleId":"174","severity":1,"message":"204","line":4,"column":10,"nodeType":"176","messageId":"177","endLine":4,"endColumn":22},{"ruleId":"174","severity":1,"message":"205","line":4,"column":24,"nodeType":"176","messageId":"177","endLine":4,"endColumn":41},{"ruleId":"174","severity":1,"message":"206","line":22,"column":9,"nodeType":"176","messageId":"177","endLine":22,"endColumn":16},{"ruleId":"162","replacedBy":"207"},{"ruleId":"164","replacedBy":"208"},{"ruleId":"174","severity":1,"message":"209","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":25},{"ruleId":"174","severity":1,"message":"210","line":4,"column":8,"nodeType":"176","messageId":"177","endLine":4,"endColumn":13},{"ruleId":"174","severity":1,"message":"211","line":7,"column":3,"nodeType":"176","messageId":"177","endLine":7,"endColumn":6},{"ruleId":"174","severity":1,"message":"212","line":13,"column":3,"nodeType":"176","messageId":"177","endLine":13,"endColumn":9},{"ruleId":"174","severity":1,"message":"213","line":62,"column":11,"nodeType":"176","messageId":"177","endLine":62,"endColumn":13},{"ruleId":"174","severity":1,"message":"202","line":2,"column":10,"nodeType":"176","messageId":"177","endLine":2,"endColumn":19},{"ruleId":"174","severity":1,"message":"214","line":11,"column":10,"nodeType":"176","messageId":"177","endLine":11,"endColumn":20},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],["215"],["216"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cookie'. Either include it or remove the dependency array.","ArrayExpression",["217"],"React Hook useEffect has a missing dependency: 'needsCare'. Either include it or remove the dependency array.",["218"],"no-unused-vars","'bkg' is defined but never used.","Identifier","unusedVar","'Hidden' is defined but never used.",["215"],["216"],"'logout' is defined but never used.",["215"],["216"],["215"],["216"],["215"],["216"],"'List' is defined but never used.","'pathToImg' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Avatar' is defined but never used.","'LockOutlinedIcon' is defined but never used.",["215"],["216"],["215"],["216"],["215"],["216"],"'useEffect' is defined but never used.","'useParams' is defined but never used.","'Typography' is defined but never used.","'ToggleButton' is defined but never used.","'ToggleButtonGroup' is defined but never used.","'history' is assigned a value but never used.",["215"],["216"],"'useState' is defined but never used.","'axios' is defined but never used.","'Box' is defined but never used.","'Button' is defined but never used.","'id' is assigned a value but never used.","'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},"Update the dependencies array to be: [cookie]",{"range":"223","text":"224"},"Update the dependencies array to be: [myRepo, needsCare]",{"range":"225","text":"226"},[3875,3877],"[cookie]",[5612,5620],"[myRepo, needsCare]"]